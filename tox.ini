# vim:tw=0:ts=2:sw=2:et:norl:ft=config
# - (lb): I'd prefer ft=config, but indented comments not highlighted properly.

# This file exists within 'pep440-version-compare-cli' aka 'pep440cmp':
#
#   https://github.com/hotoffthehamster/pep440-version-compare-cli

# This tox configuration is used when `tox` runs locally,
# as well as when Travis CI runs tox. See:
#
#   https://travis-ci.org/hotoffthehamster/pep440-version-compare-cli/

[tox]
# Leave `codecov` out of this list (only run from Travis CI, per .travis.yml).
# Leave `isort` out of this list (it has unrelated issues and will always fail).
envlist = py{35,36,37}, dist_check, docs, flake8, manifest, pep257

[testenv]
# The [testenv] section provides defaults to the other [testenv:TEST] sections.

# Below, we'll set basepython for each of the make-test tasks. Here, we
# specify the latest Python as the default for other tasks (flake8, etc.).
basepython = python3.7

# Run tests by default. The [testenv:py*] tasks will default to these commands.
# Other tasks (flake8, etc.) will override these values with their own commands.
commands_pre = pip install -U -r requirements/test.pip
whitelist_externals = make
commands = make test

# ***

[testenv:py35]
basepython = python3.5

[testenv:py36]
basepython = python3.6

[testenv:py37]
basepython = python3.7

# ***

[testenv:codecov]
deps = codecov
# Use passenv, lest:
#   Error: Missing repository upload token
passenv = CODECOV_*
commands =
    # Run tests and generate coverage.
    py.test --cov=./pep440cmp tests/
    # Upload coverage results to codecov.io.
    codecov

[testenv:dist_check]
# (lb): TEACH: An alternative to commands_pre, e.g.,
#   commands_pre = pip install -U -r requirements/release.pip
# is to use deps' -r option, thusly:
deps = -rrequirements/release.pip
commands_pre =
commands =
    # Check distribution package (e.g., verify README will render in PyPI)
    # [Ã  la deprecated readme_renderer and `python setup.py check -m -r -s`].
    python setup.py sdist
    python setup.py bdist_wheel
    twine check dist/*

[testenv:docs]
commands_pre = pip install -U -r requirements/docs.pip
deps =
    doc8
    # Avoid doc8 error: `D000 Cannot analyze code. Pygments package not found.`
    pygments
commands =
    # Build to a temporary directory, e.g., instead of calling simply
    #     make docs
    # make it unnecessarily more complex,
    # (lb) because I saw this code in another project and thought it looked cool.
    # The make-docs here is called as, e.g.,
    #     make docs \
    #       BUILDDIR=/path/to/project/.tox/docs/tmp \
    #       SPHINXOPTS=
    make docs \
        BUILDDIR={envtmpdir} \
        SPHINXOPTS={env:SPHINXOPTS_BUILD:''}
    # The make-linkcheck is called as, e.g.,
    #     make --directory=docs linkcheck \
    #       BUILDDIR=/path/to/project/.tox/docs/tmp \
    #       SPHINXOPTS=
    make --directory=docs linkcheck \
        BUILDDIR={envtmpdir} \
        SPHINXOPTS={env:SPHINXOPTS_LINKCHECK:}
    # "Doc8 is an opinionated style checker for rst...."
    doc8

[testenv:flake8]
commands_pre =
deps = flake8
commands = flake8 setup.py pep440cmp/ tests/

[testenv:isort]
commands_pre =
deps = isort
commands = isort --check-only --recursive --verbose setup.py pep440cmp/ tests/

[testenv:manifest]
commands_pre =
deps = check-manifest
commands =
    check-manifest -v

[testenv:pep257]
commands_pre =
deps = pep257
# PEP 257 -- Docstring Conventions
#   https://www.python.org/dev/peps/pep-0257/
commands = pep257 setup.py pep440cmp/ tests/

